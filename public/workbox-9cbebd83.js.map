{"version":3,"file":"workbox-9cbebd83.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/NetworkFirst.js","node_modules/workbox-strategies/NetworkOnly.js","node_modules/workbox-core/clientsClaim.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`);\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return `workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {module:workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise && (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        err = catchErr;\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do. \n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = { ...matchOptions, ignoreSearch: true };\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return (typeof input === 'string') ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * [handle()]{@link module:workbox-strategies.Strategy~handle} or\n * [handleAll()]{@link module:workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof module:workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {module:workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     *     [match callback]{@link module:workbox-routing~matchCallback},\n     *     (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * [match callback]{@link module:workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = await event.preloadResponse;\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail') ?\n            request.clone() : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            throw new WorkboxError('plugin-error-request-will-fetch', {\n                thrownError: err,\n            });\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ?\n                undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = { ...matchOptions, ...{ cacheName } };\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse = (await callback({\n                cacheName,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n                event: this.event,\n            })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback ? await cacheMatchIgnoreParams(\n        // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n        // feature. Consider into ways to only add this behavior if using\n        // precaching.\n        cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions) :\n            null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ?\n                responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n            if (error.name === 'QuotaExceededError') {\n                await executeQuotaErrorCallbacks();\n            }\n            throw error;\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        if (!this._cacheKeys[mode]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    params: this.params,\n                }));\n            }\n            this._cacheKeys[mode] = effectiveRequest;\n        }\n        return this._cacheKeys[mode];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * [`iterateCallbacks()`]{@link module:workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = { ...param, state };\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * [`doneWaiting()`]{@link module:workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * [`waitUntil()`]{@link module:workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while (promise = this._extendLifetimePromises.shift()) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve();\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache = (await callback({\n                request: this.request,\n                response: responseToCache,\n                event: this.event,\n            })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof module:workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * [workbox-core]{@link module:workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * [route]{@link module:workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to [`handle()`]{@link module:workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of [response, done] promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string' ?\n            new Request(options.request) :\n            options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                response = await callback({ error, event, request });\n                if (response) {\n                    break;\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            error = waitUntilError;\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the [`handler`]{@link module:workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {module:workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof module:workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, logs, handler });\n        promises.push(networkPromise);\n        const response = await handler.waitUntil((async () => {\n            // Promise.race() will resolve as soon as the first promise resolves.\n            return await handler.waitUntil(Promise.race(promises)) ||\n                // If Promise.race() resolved with null, it might be due to a network\n                // timeout + a cache miss. If that were to happen, we'd rather wait until\n                // the networkPromise resolves instead of returning null.\n                // Note that it's fine to await an already-resolved promise, so we don't\n                // have to check to see if it's still \"in flight\".\n                await networkPromise;\n        })());\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            error = fetchError;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass NetworkOnly extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will result in a network error.\n     */\n    constructor(options = {}) {\n        super(options);\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: '_handle',\n                paramName: 'request',\n            });\n        }\n        let error = undefined;\n        let response;\n        try {\n            const promises = [handler.fetch(request)];\n            if (this._networkTimeoutSeconds) {\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n            }\n            response = await Promise.race(promises);\n            if (!response) {\n                throw new Error(`Timed out the network response after ` +\n                    `${this._networkTimeoutSeconds} seconds.`);\n            }\n        }\n        catch (err) {\n            error = err;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","methodName","normalizedRangeHeader","size","start","end","url","status","cacheName","origin","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","RegExp","result","exec","href","location","index","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","forEach","msg","err","reject","_catchHandler","catch","catchErr","matchResult","length","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","cacheOkAndOpaquePlugin","cacheWillUpdate","response","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","keysOptions","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","Deferred","promise","resolve","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","timeout","ms","setTimeout","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","assign","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","clone","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","cachedResponse","effectiveRequest","getCacheKey","multiMatchOptions","caches","responseToCache","_ensureResponseSafeToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","state","statefulCallback","statefulParam","doneWaiting","shift","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","strategyStart","strategyName","printFinalResponse","NetworkFirst","some","p","unshift","_networkTimeoutSeconds","networkTimeoutSeconds","logs","promises","timeoutId","id","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","fetchError","clearTimeout","NetworkOnly","clientsClaim","clients","claim"],"mappings":"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"}